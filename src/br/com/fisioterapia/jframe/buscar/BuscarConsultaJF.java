package br.com.fisioterapia.jframe.buscar;

import br.com.fisioterapia.database.consulta.Consulta;
import br.com.fisioterapia.database.pessoas.Paciente;
import br.com.fisioterapia.database.pessoas.Fisioterapeuta;
import java.beans.PropertyVetoException;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author aevan
 */
public class BuscarConsultaJF extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarConsultaJF
     */
    public BuscarConsultaJF() {
        initComponents();
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException p) {
            lblSaida.setText("Ocorreu um erro ao maximizar o JInternal Frame");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTituloPaciente = new javax.swing.JLabel();
        lblHorario = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtHorario = new javax.swing.JFormattedTextField();
        txtCpfPaciente = new javax.swing.JFormattedTextField();
        lblData = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        lblTituloFisioterapeuta = new javax.swing.JLabel();
        txtCpfFisioterapeuta = new javax.swing.JFormattedTextField();
        lblBuscarHorario = new javax.swing.JLabel();
        txtBuscarHorario = new javax.swing.JFormattedTextField();
        lblBuscarData = new javax.swing.JLabel();
        txtBuscarData = new javax.swing.JFormattedTextField();
        lblSaida = new javax.swing.JLabel();
        lblNomePaciente = new javax.swing.JLabel();
        lblNomeFisioterapeuta = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        txtNomeFisioterapeuta = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Buscar Consulta");
        setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(null);

        lblTituloPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTituloPaciente.setText("CPF do Paciente:");
        getContentPane().add(lblTituloPaciente);
        lblTituloPaciente.setBounds(20, 190, 113, 30);

        lblHorario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHorario.setText("Horário:");
        getContentPane().add(lblHorario);
        lblHorario.setBounds(20, 360, 61, 41);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(180, 110, 80, 30);

        txtHorario.setEditable(false);
        try {
            txtHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtHorario);
        txtHorario.setBounds(170, 360, 80, 40);

        txtCpfPaciente.setEditable(false);
        try {
            txtCpfPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPaciente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPaciente);
        txtCpfPaciente.setBounds(170, 190, 120, 30);

        lblData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblData.setText("Data :");
        getContentPane().add(lblData);
        lblData.setBounds(20, 310, 50, 41);

        txtData.setEditable(false);
        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        getContentPane().add(txtData);
        txtData.setBounds(170, 320, 90, 30);

        lblTituloFisioterapeuta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTituloFisioterapeuta.setText("CPF do Fisioterapeuta:");
        getContentPane().add(lblTituloFisioterapeuta);
        lblTituloFisioterapeuta.setBounds(20, 270, 150, 30);

        txtCpfFisioterapeuta.setEditable(false);
        try {
            txtCpfFisioterapeuta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfFisioterapeuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfFisioterapeuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfFisioterapeutaActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfFisioterapeuta);
        txtCpfFisioterapeuta.setBounds(170, 270, 120, 30);

        lblBuscarHorario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBuscarHorario.setText("Horário:");
        getContentPane().add(lblBuscarHorario);
        lblBuscarHorario.setBounds(20, 60, 61, 30);

        try {
            txtBuscarHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBuscarHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarHorarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtBuscarHorario);
        txtBuscarHorario.setBounds(100, 60, 80, 40);

        lblBuscarData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBuscarData.setText("Data :");
        getContentPane().add(lblBuscarData);
        lblBuscarData.setBounds(20, 10, 50, 30);

        try {
            txtBuscarData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBuscarData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscarData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarDataActionPerformed(evt);
            }
        });
        getContentPane().add(txtBuscarData);
        txtBuscarData.setBounds(100, 10, 90, 30);
        getContentPane().add(lblSaida);
        lblSaida.setBounds(90, 450, 350, 20);

        lblNomePaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNomePaciente.setText("Paciente:");
        getContentPane().add(lblNomePaciente);
        lblNomePaciente.setBounds(20, 150, 113, 30);

        lblNomeFisioterapeuta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNomeFisioterapeuta.setText("Fisioterapeuta:");
        getContentPane().add(lblNomeFisioterapeuta);
        lblNomeFisioterapeuta.setBounds(20, 230, 113, 30);

        txtNomePaciente.setEditable(false);
        getContentPane().add(txtNomePaciente);
        txtNomePaciente.setBounds(170, 150, 248, 29);

        txtNomeFisioterapeuta.setEditable(false);
        getContentPane().add(txtNomeFisioterapeuta);
        txtNomeFisioterapeuta.setBounds(170, 230, 248, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        LocalDate dataConsulta;
        Duration duracao;
        long diferencaData;

        String t1 = txtBuscarHorario.getText();
        LocalTime horarioConsulta;
        try {
            dataConsulta = LocalDate.parse(txtBuscarData.getText(), DateTimeFormatter.ofPattern("dd/MM/uuuu"));
            try {
                horarioConsulta = LocalTime.parse(t1);
                Consulta c1 = new Consulta(dataConsulta, horarioConsulta);
                if (c1.verificarConsulta()) {//Método para verificar se já existe consulta marcada nesse horário
                    c1 = Consulta.buscarConsulta(dataConsulta, horarioConsulta);
                    Paciente p1 = Paciente.buscarPacienteId(c1.getCodPessoa());
                    Fisioterapeuta f1 = Fisioterapeuta.buscarFisioterapeutaId(c1.getCodFisioterapeuta());

                    txtCpfPaciente.setText(String.valueOf(p1.getCpf()));
                    txtNomePaciente.setText(p1.getNome());
                    txtCpfFisioterapeuta.setText(String.valueOf(f1.getCpf()));
                    txtNomeFisioterapeuta.setText(f1.getNome());

                    txtData.setText(dataConsulta.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));

                    txtHorario.setText(horarioConsulta.toString());
                    lblSaida.setText("Consulta encontrada");
                } else {
                    lblSaida.setText("Não existe uma consulta marcada nesse dia e horário.");
                }
            } catch (DateTimeParseException e) {
                lblSaida.setText("Horário inválido");
            }

        } catch (DateTimeParseException e) {
            lblSaida.setText("Data inválida");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorarioActionPerformed

    private void txtCpfPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void txtCpfFisioterapeutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfFisioterapeutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfFisioterapeutaActionPerformed

    private void txtBuscarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarHorarioActionPerformed

    private void txtBuscarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarDataActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel lblBuscarData;
    private javax.swing.JLabel lblBuscarHorario;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblNomeFisioterapeuta;
    private javax.swing.JLabel lblNomePaciente;
    private javax.swing.JLabel lblSaida;
    private javax.swing.JLabel lblTituloFisioterapeuta;
    private javax.swing.JLabel lblTituloPaciente;
    private javax.swing.JFormattedTextField txtBuscarData;
    private javax.swing.JFormattedTextField txtBuscarHorario;
    private javax.swing.JFormattedTextField txtCpfFisioterapeuta;
    private javax.swing.JFormattedTextField txtCpfPaciente;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JFormattedTextField txtHorario;
    private javax.swing.JTextField txtNomeFisioterapeuta;
    private javax.swing.JTextField txtNomePaciente;
    // End of variables declaration//GEN-END:variables
}
