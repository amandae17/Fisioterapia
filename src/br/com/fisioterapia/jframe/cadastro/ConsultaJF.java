package br.com.fisioterapia.jframe.cadastro;

import br.com.fisioterapia.database.consulta.Consulta;
import br.com.fisioterapia.database.pessoas.Paciente;
import br.com.fisioterapia.database.pessoas.Fisioterapeuta;
import java.beans.PropertyVetoException;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
/**
 *
 * @author aevan
 */
public class ConsultaJF extends javax.swing.JInternalFrame {

    private static int codPaciente = 0;
    private static int codFisioterapeuta = 0;

    public static int getCodPaciente() {
        return codPaciente;
    }

    public static void setCodPaciente(int codPaciente) {
        ConsultaJF.codPaciente = codPaciente;
    }

    public static int getCodFisioterapeuta() {
        return codFisioterapeuta;
    }

    public static void setCodFisioterapeuta(int codFisioterapeuta) {
        ConsultaJF.codFisioterapeuta = codFisioterapeuta;
    }

    /**
     * Creates new form ConsultaJF
     */
    public ConsultaJF() {
        initComponents();
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException p) {
            lblSaida.setText("Ocorreu um erro ao maximizar o JInternal Frame");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTituloCpf = new javax.swing.JLabel();
        lblHorario = new javax.swing.JLabel();
        btnAgendar = new javax.swing.JButton();
        btnBuscarFisioterapeuta = new javax.swing.JButton();
        lblData = new javax.swing.JLabel();
        lblTituloPaciente = new javax.swing.JLabel();
        txtCpfPacienteBusca5 = new javax.swing.JFormattedTextField();
        txtCpfPacienteBusca6 = new javax.swing.JFormattedTextField();
        txtHorario = new javax.swing.JFormattedTextField();
        txtCpfPacienteBusca7 = new javax.swing.JFormattedTextField();
        txtCpfPacienteBusca8 = new javax.swing.JFormattedTextField();
        txtCpfPacienteBusca = new javax.swing.JFormattedTextField();
        lblSaida = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        lblTituloFisioterapeuta = new javax.swing.JLabel();
        btnBuscarPaciente = new javax.swing.JButton();
        txtCpfFisioterapeuta = new javax.swing.JFormattedTextField();
        txtPaciente = new javax.swing.JTextField();
        txtFisioterapeuta = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Agendar Consulta");
        setPreferredSize(new java.awt.Dimension(500, 500));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                zerarVariaveis(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        lblTituloCpf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTituloCpf.setText("CPF do Paciente:");
        getContentPane().add(lblTituloCpf);
        lblTituloCpf.setBounds(10, 10, 113, 41);

        lblHorario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHorario.setText("Hor√°rio:");
        getContentPane().add(lblHorario);
        lblHorario.setBounds(10, 280, 61, 41);

        btnAgendar.setText("Agendar");
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgendar);
        btnAgendar.setBounds(130, 360, 120, 30);

        btnBuscarFisioterapeuta.setText("Buscar");
        btnBuscarFisioterapeuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFisioterapeutaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarFisioterapeuta);
        btnBuscarFisioterapeuta.setBounds(180, 170, 80, 30);

        lblData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblData.setText("Data:");
        getContentPane().add(lblData);
        lblData.setBounds(10, 240, 48, 41);

        lblTituloPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTituloPaciente.setText("Paciente:");
        getContentPane().add(lblTituloPaciente);
        lblTituloPaciente.setBounds(10, 80, 70, 41);

        try {
            txtCpfPacienteBusca5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPacienteBusca5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPacienteBusca5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteBusca5ActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPacienteBusca5);
        txtCpfPacienteBusca5.setBounds(330, 750, 120, 30);

        try {
            txtCpfPacienteBusca6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPacienteBusca6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPacienteBusca6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteBusca6ActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPacienteBusca6);
        txtCpfPacienteBusca6.setBounds(330, 750, 120, 30);

        try {
            txtHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHorario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtHorario);
        txtHorario.setBounds(80, 290, 70, 30);

        try {
            txtCpfPacienteBusca7.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPacienteBusca7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPacienteBusca7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteBusca7ActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPacienteBusca7);
        txtCpfPacienteBusca7.setBounds(330, 750, 120, 30);

        try {
            txtCpfPacienteBusca8.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPacienteBusca8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPacienteBusca8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteBusca8ActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPacienteBusca8);
        txtCpfPacienteBusca8.setBounds(330, 750, 120, 30);

        try {
            txtCpfPacienteBusca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfPacienteBusca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfPacienteBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfPacienteBuscaActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfPacienteBusca);
        txtCpfPacienteBusca.setBounds(160, 10, 120, 30);
        getContentPane().add(lblSaida);
        lblSaida.setBounds(0, 410, 400, 20);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("CPF do Fisioterapeuta:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 130, 140, 30);

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        getContentPane().add(txtData);
        txtData.setBounds(80, 250, 90, 30);

        lblTituloFisioterapeuta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTituloFisioterapeuta.setText("Fisioterapeuta:");
        getContentPane().add(lblTituloFisioterapeuta);
        lblTituloFisioterapeuta.setBounds(10, 200, 120, 41);

        btnBuscarPaciente.setText("Buscar");
        btnBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPacienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarPaciente);
        btnBuscarPaciente.setBounds(180, 50, 80, 30);

        try {
            txtCpfFisioterapeuta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfFisioterapeuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpfFisioterapeuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfFisioterapeutaActionPerformed(evt);
            }
        });
        getContentPane().add(txtCpfFisioterapeuta);
        txtCpfFisioterapeuta.setBounds(160, 130, 120, 30);

        txtPaciente.setEditable(false);
        getContentPane().add(txtPaciente);
        txtPaciente.setBounds(110, 90, 248, 29);

        txtFisioterapeuta.setEditable(false);
        getContentPane().add(txtFisioterapeuta);
        txtFisioterapeuta.setBounds(120, 210, 248, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCpfPacienteBusca5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteBusca5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteBusca5ActionPerformed

    private void txtCpfPacienteBusca6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteBusca6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteBusca6ActionPerformed

    private void txtHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorarioActionPerformed

    private void txtCpfPacienteBusca7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteBusca7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteBusca7ActionPerformed

    private void txtCpfPacienteBusca8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteBusca8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteBusca8ActionPerformed

    private void txtCpfPacienteBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfPacienteBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfPacienteBuscaActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed

        LocalDate dataConsulta;
        Duration duracao;
        long diferencaData;

        String t1 = txtHorario.getText();
        LocalTime horarioConsulta;

        if (ConsultaJF.getCodPaciente() > 0) {
            if (ConsultaJF.getCodFisioterapeuta() > 0) {
                try {
                    dataConsulta = LocalDate.parse(txtData.getText(), DateTimeFormatter.ofPattern("dd/MM/uuuu"));
                    duracao = Duration.between(LocalDate.now().atStartOfDay(), dataConsulta.atStartOfDay());
                    diferencaData = duracao.toDays(); // Se for zero ou negativo, a data digitada √© errada.
                    if (diferencaData > 0) {
                        try {
                            horarioConsulta = LocalTime.parse(t1);
                            Consulta c1 = new Consulta(dataConsulta, horarioConsulta, ConsultaJF.getCodPaciente(), ConsultaJF.getCodFisioterapeuta());
                            if (!c1.verificarConsulta()) {//M√©todo para verificar se j√° existe consulta marcada nesse hor√°rio
                                c1.cadastrarConsulta();
                                ConsultaJF.setCodPaciente(0);
                                ConsultaJF.setCodFisioterapeuta(0);
                                lblSaida.setText("Consulta marcada com sucesso");
                            } else {
                                lblSaida.setText("J√° existe uma consulta marcada nesse mesmo dia e hor√°rio.");
                            }
                        } catch (DateTimeParseException e) {
                            lblSaida.setText("Hor√°rio inv√°lido");
                        }
                    } else {
                        lblSaida.setText("Data inv√°lida");
                    }
                } catch (DateTimeParseException e) {
                    lblSaida.setText("Data inv√°lida");
                }

            } else {
                lblSaida.setText("Busque um fisioterapeuta primeiro.");
            }
        } else {
            lblSaida.setText("Busque um paciente primeiro.");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgendarActionPerformed

    private void txtCpfFisioterapeutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfFisioterapeutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfFisioterapeutaActionPerformed

    private void zerarVariaveis(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_zerarVariaveis
        ConsultaJF.setCodFisioterapeuta(0);
        ConsultaJF.setCodPaciente(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_zerarVariaveis

    private void btnBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPacienteActionPerformed

        String cpfB1[] = txtCpfPacienteBusca.getText().split("-");
        String cpfB2[] = cpfB1[0].split("\\.");
        String testeCpfB = cpfB2[0] + cpfB2[1] + cpfB2[2] + cpfB1[1];
        long cpfB;

        if (!testeCpfB.isBlank()) {
            cpfB = Long.parseLong(testeCpfB);
            Paciente p1 = new Paciente(cpfB);
            if (p1.verificarCpf()) {
                p1 = Paciente.BuscarPaciente(cpfB);
                txtPaciente.setText(p1.getNome());
                ConsultaJF.setCodPaciente(p1.getCodPessoa());
                lblSaida.setText("Paciente encontrado");
            } else {
                lblSaida.setText("Paciente n√£o encontrado");
            }
        } else {
            lblSaida.setText("Cpf do paciente em branco!!!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarPacienteActionPerformed

    private void btnBuscarFisioterapeutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFisioterapeutaActionPerformed
        String cpfB1[] = txtCpfFisioterapeuta.getText().split("-");
        String cpfB2[] = cpfB1[0].split("\\.");
        String testeCpfB = cpfB2[0] + cpfB2[1] + cpfB2[2] + cpfB1[1];
        long cpfB;

        if (!testeCpfB.isBlank()) {
            cpfB = Long.parseLong(testeCpfB);
            Fisioterapeuta f1 = new Fisioterapeuta(cpfB);
            if (f1.verificarFisioterapeuta()) { //Para saber se √© um fisioterapeuta,paciente ou Proprietario.  
                f1 = Fisioterapeuta.buscarFisioterapeuta(cpfB);
                txtFisioterapeuta.setText(f1.getNome());
                ConsultaJF.setCodFisioterapeuta(f1.getCodFisioterapeuta());
                lblSaida.setText("Fisioterapeuta encontrado");
            } else {
                lblSaida.setText("Fisioterapeuta n√£o encontrado!!!");
            }
        } else {
            lblSaida.setText("Cpf do fisioterapeuta em branco!!!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarFisioterapeutaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnBuscarFisioterapeuta;
    private javax.swing.JButton btnBuscarPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblSaida;
    private javax.swing.JLabel lblTituloCpf;
    private javax.swing.JLabel lblTituloFisioterapeuta;
    private javax.swing.JLabel lblTituloPaciente;
    private javax.swing.JFormattedTextField txtCpfFisioterapeuta;
    private javax.swing.JFormattedTextField txtCpfPacienteBusca;
    private javax.swing.JFormattedTextField txtCpfPacienteBusca5;
    private javax.swing.JFormattedTextField txtCpfPacienteBusca6;
    private javax.swing.JFormattedTextField txtCpfPacienteBusca7;
    private javax.swing.JFormattedTextField txtCpfPacienteBusca8;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtFisioterapeuta;
    private javax.swing.JFormattedTextField txtHorario;
    private javax.swing.JTextField txtPaciente;
    // End of variables declaration//GEN-END:variables
}
